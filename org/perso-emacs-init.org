* Personal Info

My personal information are stored in the file ~personal/emacs-personal.el~ that is not versioned.
It simply contains the two following instructions.
#+BEGIN_SRC emacs-lisp :tangle no
(setq user-full-name "Foo Bar")
(setq user-mail-address "foo@bar.com")
#+END_SRC

* Title Bar and Icon

Set the same text for the title bar and icon.
I am not sure that the icon is used in Fedora with Gnome 3.
#+BEGIN_SRC emacs-lisp
  (setq frame-title-format (list "" invocation-name " " emacs-version " - "
  '(:eval
    (if
        (buffer-file-name)
        (abbreviate-file-name
         (buffer-file-name))
      "%b")) " @ " system-name))

 (setq icon-title-format frame-title-format)
#+END_SRC

* Backup Files
Let stop creating those backup\~ and #autosave# files.
We also instruct Emacs to silently delete the older backups.
#+BEGIN_SRC emacs-lisp
(setq make-backup-files nil)
(setq auto-save-default nil)

(setq delete-old-versions t)
#+END_SRC

* Display Images and Archives
#+BEGIN_SRC emacs-lisp
(setq auto-image-file-mode t)
(setq auto-compression-mode t)
#+END_SRC
* French Spacing
  It is not necessary that sentence and colon ends are followed by a double space.
#+BEGIN_SRC emacs-lisp
(setq sentence-end-double-space nil)
(setq colon-double-space nil)
#+END_SRC

* Display the Menubar
  Otherwise, you can only use the mini-buffer in Fedora.
#+BEGIN_SRC emacs-lisp
(menu-bar-mode t)
#+END_SRC

* Quick Questions
Make all yes-or-no questions as y-or-n, and disable all dialog boxes.
#+BEGIN_SRC emacs-lisp
(fset 'yes-or-no-p 'y-or-n-p)
(setq use-dialog-box nil)
#+END_SRC

* Rainbow Delimiters
#+BEGIN_SRC emacs-lisp
(prelude-require-package 'rainbow-delimiters)
(add-hook 'prog-mode-hook 'rainbow-delimiters-mode)
#+END_SRC
Note that I did not succeed to enable it by default with LaTeX.
* Disable Guru Mode
The warning attracts the eyes and I want to use arrows when it fits me.
#+BEGIN_SRC emacs-lisp
(setq prelude-guru nil)
#+END_SRC
* Company Mode

Use documentation popups that appears when idling on a completion candidate.
#+BEGIN_SRC emacs-lisp
(prelude-require-package 'company-quickhelp)
(company-quickhelp-mode)
#+END_SRC

Make ~M-h~ to display quick help.
#+BEGIN_SRC emacs-lisp
(define-key company-active-map (kbd "M-h") 'company-show-doc-buffer)
#+END_SRC

* Irony (C/C++)

Load required packages.
#+BEGIN_SRC emacs-lisp
(prelude-require-package 'irony)
(prelude-require-package 'company-irony)

(eval-after-load 'company
  '(add-to-list 'company-backends 'company-irony))

(add-hook 'c++-mode-hook 'irony-mode)
(add-hook 'c-mode-hook 'irony-mode)
(add-hook 'objc-mode-hook 'irony-mode)

(add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)
#+END_SRC

Add hooks for C and its variants
#+BEGIN_SRC emacs-lisp
(add-hook 'c++-mode-hook 'irony-mode)
(add-hook 'c-mode-hook 'irony-mode)
(add-hook 'objc-mode-hook 'irony-mode)
#+END_SRC

Add hook for discovering compile options.
#+BEGIN_SRC emacs-lisp
(add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)
#+END_SRC
To use irony with a Makefile project, you must compile it with [[https://github.com/rizsotto/Bear][Bear]].
: sudo dnf install bear
* Whitespace Mode

 I have just removed the ~tabs~ and ~lines-tail~ of the configuration in [[file:~/.emacs.d/core/prelude-editor.el][prelude-editor.el]].
 #+BEGIN_SRC emacs-lisp
(setq whitespace-style '(face empty trailing))
 #+END_SRC
* Graphviz Mode
#+BEGIN_SRC emacs-lisp
(prelude-require-package 'graphviz-dot-mode)
#+END_SRC

* Sagemath Mode
#+BEGIN_SRC emacs-lisp
(prelude-require-package 'sage-shell-mode)

;; Run SageMath by M-x run-sage instead of M-x sage-shell:run-sage
(sage-shell:define-alias)

;; Turn on eldoc-mode in Sage terminal and in Sage source files
(add-hook 'sage-shell-mode-hook #'eldoc-mode)
(add-hook 'sage-shell:sage-mode-hook #'eldoc-mode)

(customize-set-variable 'sage-shell:use-prompt-toolkit t)
(customize-set-variable 'sage-shell:use-simple-prompt nil)
(customize-set-variable 'sage-shell:set-ipython-version-on-startup nil)
(customize-set-variable 'sage-shell:check-ipython-version-on-startup nil)
#+END_SRC

* Keybindings
** Visual Mode Switches
  #+BEGIN_SRC emacs-lisp
 (global-set-key (kbd "C-c h w") 'whitespace-mode)
 (global-set-key (kbd "C-c h l") 'visual-line-mode)
 #+END_SRC
** Add Fn keybindings
 #+BEGIN_SRC emacs-lisp
 (global-set-key [f3] 'dired)
 (global-set-key [f4] 'org-capture)
 (global-set-key [f5] '(lambda () (interactive)(find-file "~/org/mygtd.org")))

 (global-set-key [f6] (lambda () (interactive) (ispell-change-dictionary "francais")))
 (global-set-key [f7] (lambda () (interactive) (ispell-change-dictionary "english")))
 #+END_SRC
** Quick Comments
Well, it is good to have the same keybinding for commenting out region in all modes.
 #+BEGIN_SRC emacs-lisp
   (define-key prelude-mode-map (kbd "C-c c") 'comment-region)
   (define-key prelude-mode-map (kbd "C-c u") 'uncomment-region)
 #+END_SRC
* Références
- [[http://gewhere.github.io/orgmode-emacs-init-file][aucotsi's blog : how to setup your Emacs init file using orgmode]]
